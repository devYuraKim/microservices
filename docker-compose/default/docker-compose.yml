services:

  accountsdb:
    container_name: accountsdb
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: accountsdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  loansdb:
    container_name: loansdb
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: loansdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  cardsdb:
    container_name: cardsdb
    ports:
      - "3308:3306"
    environment:
      MYSQL_DATABASE: cardsdb
    extends:
      file: common-config.yml
      service: microservice-db-config

  #0.rabbitMQ
  rabbit:
    image: rabbitmq:4-management
    hostname: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      start_period: 20s
      timeout: 5s
      interval: 10s
      retries: 10
    extends:
      file: common-config.yml
      service: network-deploy-service

  #1.configserver
  configserver:
    image: yurakimyurakim/configserver:0.1.0-SNAPSHOT
    container_name: configserver
    ports:
      - "8071:8071"
    volumes:
      # Mount SSH private key (read-only) for Git authentication(Proves my identity to GitHub)
      - ~/.ssh/id_rsa:/root/.ssh/id_rsa:ro
      # Mount known_hosts to validate GitHub server's fingerprint(Ensures I'm talking to GitHub)
      - ~/.ssh/known_hosts:/root/.ssh/known_hosts:ro
    environment:
      # Disable SSH agent forwarding inside container; force use of mounted id_rsa
      - SSH_AUTH_SOCK=
    depends_on:
      rabbit:
        condition: service_healthy
    healthcheck:
      test: "curl --fail --silent localhost:8071/actuator/health/readiness | grep UP || exit 1"
      start_period: 30s #increased for SSH setup
      retries: 10
      interval: 10s
      timeout: 5s
    extends:
      file: common-config.yml
      service: microservice-base-config

  #2.accounts
  accounts:
    image: yurakimyurakim/accounts:0.2.0-SNAPSHOT
    container_name: accounts
    ports:
      - "8080:8080"
    depends_on:
      configserver:
        condition: service_healthy
      accountsdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://accountsdb:3306/accountsdb"


  #3.loans
  loans:
    image: yurakimyurakim/loans:0.2.0-SNAPSHOT
    container_name: loans
    ports:
      - "8090:8090"
    depends_on:
      configserver:
        condition: service_healthy
      loansdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://loansdb:3306/loansdb"

  #4.cards
  cards:
    image: yurakimyurakim/cards:0.2.0-SNAPSHOT
    container_name: cards
    ports:
      - "9000:9000"
    depends_on:
      configserver:
        condition: service_healthy
      cardsdb:
        condition: service_healthy
    extends:
      file: common-config.yml
      service: microservice-configserver-config
    environment:
      SPRING_DATASOURCE_URL: "jdbc:mysql://cardsdb:3306/cardsdb"

networks:
  microservices:
    driver: bridge